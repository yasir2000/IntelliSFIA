version: '3.8'

networks:
  intellisfia:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  ollama_data:

services:
  # =============================================================================
  # OLLAMA SERVICE (Local LLM)
  # =============================================================================
  ollama:
    image: ollama/ollama:latest
    container_name: intellisfia-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_ORIGINS=*
      - OLLAMA_HOST=0.0.0.0:11434
    networks:
      - intellisfia
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # =============================================================================
  # FRONTEND APPLICATION
  # =============================================================================
  frontend:
    build:
      context: ./sfia_ai_framework/frontend
      dockerfile: Dockerfile.prod
    container_name: intellisfia-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_VERSION=1.0.0
    networks:
      - intellisfia
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # BACKEND API
  # =============================================================================
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: intellisfia-api
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://intellisfia:intellisfia_password@postgres:5432/intellisfia
      - REDIS_URL=redis://redis:6379/0
      - OLLAMA_BASE_URL=http://ollama:11434
      - OLLAMA_MODEL=llama3.1:8b
      - LLM_PROVIDER=ollama
      - CORS_ORIGINS=http://localhost:3000,http://localhost:80
    depends_on:
      - postgres
      - redis
      - ollama
    networks:
      - intellisfia
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # REVERSE PROXY
  # =============================================================================
  nginx:
    image: nginx:alpine
    container_name: intellisfia-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - api
    networks:
      - intellisfia
    restart: unless-stopped

  # =============================================================================
  # DATABASES
  # =============================================================================
  postgres:
    image: postgres:15-alpine
    container_name: intellisfia-postgres
    environment:
      - POSTGRES_DB=intellisfia
      - POSTGRES_USER=intellisfia
      - POSTGRES_PASSWORD=intellisfia_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - intellisfia
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U intellisfia"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: intellisfia-redis
    command: redis-server --requirepass redis_password
    volumes:
      - redis_data:/data
    networks:
      - intellisfia
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # MODEL INITIALIZATION SERVICE
  # =============================================================================
  model-init:
    image: ollama/ollama:latest
    container_name: intellisfia-model-init
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=ollama:11434
    networks:
      - intellisfia
    depends_on:
      - ollama
    restart: "no"
    command: >
      sh -c "
        echo 'Waiting for Ollama service...' &&
        sleep 30 &&
        echo 'Pulling required models...' &&
        ollama --host ollama:11434 pull llama3.1:8b &&
        ollama --host ollama:11434 pull codellama:7b &&
        echo 'Models pulled successfully!'
      "