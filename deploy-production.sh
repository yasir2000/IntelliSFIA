#!/bin/bash
# Production Deployment Script for IntelliSFIA with Ollama
# ========================================================

set -e

echo "üöÄ IntelliSFIA Production Deployment with Ollama"
echo "================================================="

# Check if Docker and Docker Compose are installed
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker not found. Please install Docker first."
    exit 1
fi

if ! command -v docker-compose &> /dev/null && ! docker compose version &> /dev/null; then
    echo "‚ùå Docker Compose not found. Please install Docker Compose first."
    exit 1
fi

echo "‚úÖ Docker and Docker Compose found"

# Stop any existing containers
echo "üõë Stopping existing containers..."
docker-compose -f docker-compose.prod-ollama.yml down 2>/dev/null || true

# Remove old images (optional)
read -p "üóëÔ∏è  Remove old Docker images? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "üóëÔ∏è  Removing old images..."
    docker system prune -f
    docker volume prune -f
fi

# Build and start services
echo "üî® Building and starting services..."
docker-compose -f docker-compose.prod-ollama.yml up --build -d

# Wait for services to be healthy
echo "‚è≥ Waiting for services to start..."
sleep 30

# Check service health
echo "üîç Checking service health..."

# Check Ollama
if curl -sf http://localhost:11434/api/tags > /dev/null; then
    echo "‚úÖ Ollama service is healthy"
else
    echo "‚ùå Ollama service is not responding"
fi

# Check API
if curl -sf http://localhost:8000/health > /dev/null; then
    echo "‚úÖ API service is healthy"
else
    echo "‚ùå API service is not responding"
fi

# Check Frontend
if curl -sf http://localhost:3000 > /dev/null; then
    echo "‚úÖ Frontend service is healthy"
else
    echo "‚ùå Frontend service is not responding"
fi

# Check PostgreSQL
if docker exec intellisfia-postgres pg_isready -U intellisfia > /dev/null; then
    echo "‚úÖ PostgreSQL is healthy"
else
    echo "‚ùå PostgreSQL is not responding"
fi

# Show service status
echo ""
echo "üìä Service Status:"
echo "=================="
docker-compose -f docker-compose.prod-ollama.yml ps

echo ""
echo "üåê Access Points:"
echo "================="
echo "‚Ä¢ Frontend:      http://localhost:3000"
echo "‚Ä¢ API:           http://localhost:8000"
echo "‚Ä¢ API Docs:      http://localhost:8000/docs"
echo "‚Ä¢ Ollama API:    http://localhost:11434"
echo "‚Ä¢ Nginx Proxy:   http://localhost:80"

echo ""
echo "üîß Management Commands:"
echo "======================"
echo "‚Ä¢ View logs:       docker-compose -f docker-compose.prod-ollama.yml logs -f"
echo "‚Ä¢ Stop services:   docker-compose -f docker-compose.prod-ollama.yml down"
echo "‚Ä¢ Restart:         docker-compose -f docker-compose.prod-ollama.yml restart"
echo "‚Ä¢ Shell access:    docker exec -it intellisfia-api bash"

echo ""
echo "üß™ Quick Tests:"
echo "==============="
echo "‚Ä¢ Test API:        curl http://localhost:8000/health"
echo "‚Ä¢ Test Ollama:     curl http://localhost:11434/api/tags"
echo "‚Ä¢ Test Frontend:   curl http://localhost:3000"

echo ""
echo "‚úÖ Deployment Complete!"
echo ""
echo "üí° Note: Model downloads may take some time on first run."
echo "   Check progress with: docker logs intellisfia-model-init"